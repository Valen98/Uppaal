<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
const int maxProcesses = 6;
//Amount of semaphores
urgent chan Go;

const int choco = 1;
const int cream = 2;
const int egg = 3;

const int numChan = 4;
const int arg = 4;

int msg[arg];
chan Send[numChan+1];
chan Receive[numChan+1];
</declaration>
	<template>
		<name>initiator</name>
		<location id="id0" x="0" y="0">
		</location>
		<location id="id1" x="170" y="0">
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="34" y="-17">Send[0]!</label>
		</transition>
	</template>
	<template>
		<name>Server</name>
		<parameter>const int ID</parameter>
		<declaration>int localMSG[arg];</declaration>
		<location id="id2" x="-102" y="-42">
			<name x="-119" y="-76">Producing</name>
		</location>
		<location id="id3" x="102" y="-42">
			<name x="119" y="-50">Wait2Send</name>
		</location>
		<location id="id4" x="102" y="170">
			<name x="127" y="144">Sending</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="102" y="47">Send[localMSG[0]]!</label>
			<label kind="assignment" x="102" y="64">msg[0]=localMSG[1],
msg[1]=localMSG[2]</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-84" y="153">Go?</label>
			<nail x="-102" y="170"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="-84" y="-59">Receive[0]?</label>
			<label kind="assignment" x="-84" y="-42">localMSG=msg</label>
		</transition>
	</template>
	<template>
		<name>Chef</name>
		<parameter>const int ID, const int ingredient1, const int ingredient2</parameter>
		<declaration>int ingredients[arg];</declaration>
		<location id="id5" x="-102" y="-136">
			<name x="-112" y="-170">Waiting4Ingredients</name>
		</location>
		<location id="id6" x="102" y="0">
			<name x="110" y="-25">CookingAndEating</name>
		</location>
		<location id="id7" x="102" y="-136">
			<name x="119" y="-161">IngredientsRecieved</name>
		</location>
		<init ref="id5"/>
		<transition>
			<source ref="id5"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-85" y="-153">Send[0]!</label>
			<label kind="assignment" x="-85" y="-136">msg[0]=ID,
msg[1]=ingredient1,
msg[2]=ingredient2</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-68" y="8">Go?</label>
			<nail x="-102" y="0"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="110" y="-76">Receive[ID]?</label>
			<label kind="assignment" x="110" y="-59">ingredients=msg</label>
		</transition>
	</template>
	<template>
		<name>Channel</name>
		<parameter>const int ChID</parameter>
		<declaration>int buff[maxProcesses][arg];
int count = 0;
int tmp = 0;</declaration>
		<location id="id8" x="0" y="0">
		</location>
		<location id="id9" x="136" y="102">
		</location>
		<location id="id10" x="272" y="34">
		</location>
		<init ref="id8"/>
		<transition>
			<source ref="id8"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-25" y="-93">Send[ChID]?</label>
			<label kind="assignment" x="42" y="-68">buff[count]=msg,
count++</label>
			<nail x="-34" y="-68"/>
			<nail x="34" y="-68"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="guard" x="51" y="0">tmp==count</label>
			<label kind="assignment" x="51" y="17">tmp=0</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id9"/>
			<label kind="assignment" x="170" y="-8">buff[tmp]=buff[tmp+1],
tmp++</label>
			<nail x="136" y="34"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id10"/>
			<label kind="guard" x="154" y="68">tmp &lt; count</label>
			<nail x="272" y="102"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="guard" x="-68" y="93">count&gt;0</label>
			<label kind="synchronisation" x="-68" y="110">Receive[ChID]!</label>
			<label kind="assignment" x="-68" y="127">msg = buff[0],
count--</label>
			<nail x="0" y="102"/>
		</transition>
	</template>
	<template>
		<name>Progression</name>
		<location id="id11" x="0" y="0">
		</location>
		<init ref="id11"/>
		<transition>
			<source ref="id11"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="42" y="0">Go!</label>
			<nail x="68" y="34"/>
			<nail x="68" y="-34"/>
		</transition>
	</template>
	<system>// Place template instantiations here.
//TableSem = Semaphore(0);
//ChocoEggSem = Semaphore(1);
//ChocoCreamSem = Semaphore(2);
//EggCreamSem = Semaphore(3);

//All agents
Server1 = Server(0);


//All Chefs
ChefChoco = Chef(1, egg, cream);
ChefEgg = Chef(2, choco, cream);
ChefCream = Chef(3, choco, egg);


//Channel

ServerChan = Channel(0);
ChocoChan = Channel(1);
EggChan = Channel(2);
CreamChan = Channel(3);

// List one or more processes to be composed into a system.
system  ChefChoco, ChefEgg, ChefCream, Progression,  Server1, ChocoChan, EggChan, CreamChan, ServerChan;
</system>
	<queries>
		<query>
			<formula>Server1.Wait2Send --&gt; Server1.Sending</formula>
			<comment>Checks if the Server has sent the ingredient to a chef and then moves from Wait2Send to Sending. The result is false due to server is not enforced to progress and can be stalled, while the result should be true.</comment>
		</query>
		<query>
			<formula>E&lt;&gt; ! (Server1.localMSG[0]==ChefChoco.ID &amp;&amp; (Server1.localMSG[1]==choco || Server1.localMSG[2]==choco))</formula>
			<comment>There is no path where a state where the server produces the chefs owned ingredient </comment>
		</query>
		<query>
			<formula>Server1.localMSG[0]==ChefChoco.ID &amp;&amp; Server1.localMSG[1]==ChefChoco.ingredient1 &amp;&amp; Server1.localMSG[2]==ChefChoco.ingredient2 --&gt; ChefChoco.CookingAndEating</formula>
			<comment>Check if the server gives the correct chef the correct ingredients and the chef moves from receive ingredients to CookingAndEating. The result is false because the chef is not enforced to progress and can be stalled, while the result should be true.</comment>
		</query>
		<query>
			<formula>E&lt;&gt; (Server1.localMSG[0]==ChefChoco.ID &amp;&amp; Server1.localMSG[1]==ChefChoco.ingredient1 &amp;&amp; Server1.localMSG[2]==ChefChoco.ingredient2)</formula>
			<comment>Check if the server has the correct chef id with the correct Ingredients.</comment>
		</query>
		<query>
			<formula>ChefChoco.IngredientsRecieved --&gt; ChefChoco.CookingAndEating</formula>
			<comment>Check if there is always true that the chef will recieve ingredients and starts cookingEating</comment>
		</query>
		<query>
			<formula>A[] ! (ChefEgg.ingredients[0]==egg || ChefEgg.ingredients[1]==egg)</formula>
			<comment>Is there any possible way the ChefEgg can receive the ingredient he already has which is Egg. The given query shall always result to true</comment>
		</query>
		<query>
			<formula>A[] ! (ChefCream.ingredients[0]==cream || ChefCream.ingredients[1]==cream)</formula>
			<comment>Is there any possible way the ChefCream can receive the ingredient he already has which is Cream. The given query shall always result to true</comment>
		</query>
		<query>
			<formula>A[] ! (ChefChoco.ingredients[0]==choco || ChefChoco.ingredients[1]==choco)</formula>
			<comment>Is there any possible way the chefchoco can receive the ingredient he already has which is choco. The given query shall always result to true</comment>
		</query>
		<query>
			<formula>A[] ! ChefChoco.CookingAndEating || (ChefChoco.ingredients[0]==egg &amp;&amp; ChefChoco.ingredients[1]==cream)</formula>
			<comment>Test to see if a chef got the correct ingredient before cooking and eating.</comment>
		</query>
		<query>
			<formula>A[] ! deadlock</formula>
			<comment>Check if there is a deadlock for all states.</comment>
		</query>
	</queries>
</nta>
